name: Test

on:
  push:
    branches:
      - main
  pull_request:
  merge_group:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test Unit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: "package.json"
          cache: "pnpm"
          cache-dependency-path: "pnpm-lock.yaml"

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build
        env:
          VITE_API_HOST: http://localhost:4000
          VITE_CLIENT_HOST: http://client.mock.com

      # we need the build step before in order to generate the paraglide runtime files
      - name: Type-check
        run: pnpm check

      - name: Get Latest playwright version
        run: echo "PLAYWRIGHT_VERSION=$(pnpm show playwright version)" >> $GITHUB_ENV
      - name: Cache playwright binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - name: Install playwright with deps
        run: pnpm exec playwright install --with-deps

      - name: Unit tests
        run: pnpm test:unit

  cypress:
    name: Cypress
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: "package.json"
          cache: "pnpm"
          cache-dependency-path: "pnpm-lock.yaml"

      - name: Install dependencies
        run: pnpm install

      #  use the Cypress GitHub Action to run Cypress tests within the chrome browser
      - name: Cypress
        uses: cypress-io/github-action@v6
        with:
          install: false
          build: pnpm build:test
          # we launch the app in preview mode to avoid issues with hmr websockets from vite polluting the mocks
          start: pnpm preview:test
          browser: chrome
          quiet: true
          config-file: cypress.config.ts
        env:
          VITE_PORT: ${{ vars.VITE_PORT }}
          VITE_VERSION: ${{ vars.VITE_VERSION }}
          VITE_GRAASP_API_HOST: ${{ vars.VITE_GRAASP_API_HOST }}
          VITE_GRAASP_LIBRARY_HOST: ${{ vars.VITE_GRAASP_LIBRARY_HOST }}
          VITE_SHOW_NOTIFICATIONS: ${{ vars.VITE_SHOW_NOTIFICATIONS }}
          VITE_GRAASP_REDIRECTION_HOST: ${{ vars.VITE_GRAASP_REDIRECTION_HOST }}

      # after the test run completes
      # store any screenshots
      # NOTE: screenshots will be generated only if E2E test failed
      # thus we store screenshots only on failures
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
